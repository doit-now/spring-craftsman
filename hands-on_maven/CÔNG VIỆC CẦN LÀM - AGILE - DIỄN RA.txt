CÔNG VIỆC CẦN LÀM - AGILE - DIỄN RA SONG SONG

1. TÌM TEMPLATE (SEARCH CÁC KEYWORD DÍNH ĐẾN TOPIC ĐANG LÀM -> RA WEB SITE NƯỚC NGOÀI -> SAVE TRANG + CSS), MUA TEMPLATE (THEMEFOREST) 
TEMPLATE FOR <DOMAIN - LÃNH VỰC> 

2. DỰNG LUÔN FRONT-END SERVER (LOCAL HOST, PORT 3000...)
- CÀI REACT, LOCALHOST://... RA ĐC TRANG LÀ OKIE
   
3. DỰNG LUÔN BACK-END SERVER 
------------------------
BACK-END SERVER (SPRING BOOT, NODEJS, ASP.NET) -> PORT X
FRONT-END SERVER (REACT, VUE, ANGULAR)         -> PORT Y   
------------------------

4. BACK-END: TÌM HIỂU 1 CÁI ORM (OBJECT RELATION MAPPING)
                    1 TABLE ~~~~ 1 CLASS
             KĨ THUẬT ĐỒNG BỘ CLASS OOP THÀNH TABLE VÀ NGƯỢC LẠI
               new Student(...)  -> tự động ngầm sinh ra câu insert into...
               	KO CẦN CÂU SQL, THUẦN VIẾT CODE MÀ LẠI XUỐNG ĐC DB
             NODEJS CÓ FRAMEWORK RIÊNG, BỘ THƯ VIỆN RIÊNG ĐỂ LÀM
             JAVA: HIBERNATE
             C#: EF CORE (ENTITY FRAMEWORK CORE)
  * HỌC VÀ DỰNG 1 CÁI API, THƯỜNG THEO KIẾN TRÚC LAYER

       JSON <->  CONTROLLER -> SERVICE -> REPOSITORY  -> DB
                                          XÀI ORM Ở ĐÂY
                                  |
                                MOMO, GHN
                                (SANDBOX)

 - LÀM TRƯỚC API TRẢ VỀ THỬ DATA CỦA 1 TABLE BẤT KÌ (JSON)

  Student an = new Student("SE1", "AN NGUYỄN", 2004, 8.6);
                   //OBJECT TRONG JAVA, C#

  JavaScript:   {"id":"SE1", "name":"AN NGUYỄN", "yob":2004, "gpa":8.6}
                        JSON string
                  JavaScript Object Notation


* ĐỂ TEST WEB API:
  "WEB API" LÀ 1 HÀM ĐC GỌI QUA URL, TRẢ VỀ JSON
                https://appcuatui.com/api/v2/orders  -> trả về list object
                https://appcuatui.com/api/v2/products
               
               > END-POINT (URL TRẢ VỀ JSON)

      [ {"id":"SK1", "name":"KEM DƯỠNG...", "mandate":"" , "price":8.6, url},
        {"id":"SK2", "name":"SON DƯỠNG...", "mandate":"", "price":8.6}      
      ] 
       
CODING CONVENTION FOR REST API END POINT - CÁCH ĐẶT TÊN TRONG API

 
* POSTMAN: LÀ PHẦN MỀM DÙNG ĐỂ TEST CÁC API, TEST GET, POST, PATCH, DELETE
* SWAGGER-UI: ĐÂY LÀ 1 BỘ THƯ VIỆN TÍCH HỢP CÙNG CODE API ĐỂ 
              GENERATE RA DANH SÁCH CÁC END-POINT ĐỂ LÀM DOCUMENT HDSD API
              CHUẨN VIẾT DOCUMENT, USER GUIDE, USER MAN
              TẠO WEB APP NHO NHỎ TEST THỬ API LUÔN  

* BẢO MẬT API, TRÁNH CHO AI MÀ BIẾT URL VÀO LẤY DATA, INSERT DATA
              PHẢI CẤP QUYỀN TRUY XUẤT -> THƯ VIỆN JWT
[KO BẮT BUỘC]
 

FRONT-END                 FONT END  => 1 SERVER, 1 PORT RIÊNG
- CÀI NODE, TẠO PROJECT REACT
- CÀI ANGULAR, VUE TUỲ
- THẰNG NÀY RENDER TRANG WEB; PHẢI GỌI API BÊN BACKEND ĐỂ CÓ DATA JSON
      PARSE JSON THÀNH TABLE, DIV...  
     
        (JACKSON, GSON)  
                
- GỌI API BẰNG CÁCH NÀO: HTTPCLIENT
                         AXIOS

- MOCK API -> WEB SITE CHO BẠN TẠO NHANH MẤY ENDPOINT, TRẢ VỀ JSON CÓ DỮ LIỆU THEO CÁCH CỦA MÌNH


GỌI API CÓ VỤ CORS


1 LÊ LỢI Q.1 - NHÀ      ----------------- ĐỊA CHỈ IP: 203.10.  SERVER
BA, ME, AHAI, CHAI, MÌNH                             (IP V4, V6) 
                                                        NAT 
                                              SQL SERVER, MYSQL, TOMCAT
                                                 ...
    |                                                     |

BẠN GỬI THƯ/SHIPPER SHIP
 ĐẾN NHÀ MÌNH                                BROWSER GỬI REQUEST
PHONG BÌ: 
1 LÊ LỢI Q.1 
AI NHẬN: MÌNH                                APP NHẬN REQUEST, MỖI APP CÓ
MÌNH, TÊN BA, TÊN MÁ                                             1 ID
TÊN AC HAI -> PORT                            1433       3306     8080   
INFORMATION ARCHITECT
DON'T MAKE ME THINK  SÁCH VỀ UX
IxD

PORT: TÊN GỌI DUY NHẤT CHO 1 CÁI APP CÀI TRÊN SERVER DÙNG ĐỂ PHỤC VỤ CÁC 
      REQUEST VÀ RESPONSE
      - PORT LÀ CON SỐ DÙNG 2 BYTE, 16 BIT, 2^16 TỔ HỢP 0101010
                                            65536,  PORT 0...65535  
                                            0...1024 DÀNH RIÊNG CHO MẠNG
                                                   
 
                                               Digital Ocean, Heroku,
                                               Vercel, Netlify
                                               (gọi chung là host, hosting)
                                               
                                             domain (tên miền)
                                             tên gợi nhớ passswp.com
                                                         passswp.org
                                             -> map/ánh xạ vào IP - gắn server 
                                             tên miền trả theo năm (vài đô)
                                          mắt bão.com  check tên miền còn rảnh

        ĐƯA CODE/APP LÊN SERVER, MAP VÀO TÊN MIỀN -> GỌI LÀ DEPLOYMENT
        (KO BẮT BUỘC CHO MÔN NÀY, CHỈ LÀ ĐIỂM +)

  CI/CD/DEVOPS: TỰ ĐỘNG HOÁ QUÁ TRÌNH ĐƯA APP LÊN SERVER KỂ TỪ LÚC PUSH CODE LÊN GITHUB

