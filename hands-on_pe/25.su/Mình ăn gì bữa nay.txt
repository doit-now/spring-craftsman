MÌNH ĂN GÌ TỐI NAY CHO NGÀY MAI SUNG SỨC ĐI THI?

RECIPE FOR COOKING A PRACTICAL EXAM SPRINGMVC APP (MÔN HSF302)

I. TOOL VÀ CÔNG CỤ SỬ DỤNG
1. INTELLIJ
2. SQL SERVER 2019 (18 OKIE)
3. WIFI ĐỂ DOWNLOAD DEPENDENCY NGAY LÚC TẠO PROJECT!!!
4. MS WORD ĐỂ MỞ FILE NOTES.DOCX - GHI CHÚ 1 SỐ THÔNG TIN

>>>>> KO MỞ, DÙNG CÁC TOOL KHÁC, VÌ SẼ BỊ APP EXAM NÓ LOG LẠI
      SAU NÀY HẬU KIỂM, CÓ THỨ LẠ ĐC MỞ -> 0 ĐIỂM!!!

II. TẠO BÀI
1. TẠO 1 THƯ MỤC TRÊN DESKTOP 
  * KO ĐỂ Ở THƯ MỤC DOWNLOADS\, ZALO DOWNLOADS\, GOOGLE DRIVE, ONE DRIVE, ... DRIVE
    VÌ RẤT DỄ BỊ XUNG ĐỘT VỚI CÁI TOOL ĐỒNG BỘ LÊN CLOUD, ẢNH HƯỞNG QUÁ TRÌNH BIÊN DỊCH 
    APP! KO DỄ TÌM RA NGUYÊN NHÂN TRONG PHÒNG THI.
    -> ĐỂ FIX CHỈ CẦN MOVE APP SANG THƯ MỤC
    KO PHẢI ĐÁM TRÊN  

  * TẠO THƯ MỤC VÍ DỤ HSF302-PE\, HSF302_PE\ TRÊN DESKTOP, RỒI NHÉT APP VÀO TRONG THƯ
    MỤC NÀY

2. TẠO PROJECT SPRING BOOT (MAVEN), CẦN WIFI NGAY!!! BÁO GIÁM THỊ LÀ GIÁM THỊ BIẾT
2.1 ĐẶT TÊN PROJECT ĐÚNG CHUẨN NHÀ TRƯỜNG YÊU CẦU
2.2 ĐẶT TÊN PACKAGE ĐÚNG CHUẨN NHÀ TRƯỜNG YÊU CẦU
2.3 ĐẶT TÊN CÁC PACKAGE CON ĐÚNG CHUẨN NHÀ TRƯỜNG YÊU CẦU
2.4 CHỌN JDK 21, HOẶC 24
2.5 CHỌN 5 OPTIONS...
2.6 BỔ SUNG NGAY CÁI VALIDATION DEPENDENCY SAU KHI TẠO XONG PROJECT!!! ĐỒNG BỘ NGAY POM.XML
    BẰNG CÁCH NHẤN CTRL-SHIFT-O
    LẤY THÔNG TIN DEPENDENCY NÀY Ở TRONG FILE NOTES.DOCX (KO LÊN WEB MVNREPOSITORY.COM ĐỂ LẤY)
    
2.7 TẠO DATABASE TRONG SQL SERVER, TÊN DATABASE ĐÚNG NHƯ ĐỀ THI YÊU CẦU
    VÍ DỤ NÀY TUI DÙNG TÊN: Bookstore 

2.8 QUAN TRỌNG: CẤU HÌNH APP TRONG FILE application.properties 
                                        !!!!!!!!!!!!! **********************************

    THÔNG TIN CẤU HÌNH NẰM TRONG FILE NOTES.DOCX: KẾT NỐI CSDL, JPA/HIBERNATE, THYMELEAF 
    (ĐỀ THI MẪU BỊ THIẾU PHẦN KHAI BÁO THYMELEAF) 

    * SỬA USER/PASS MÓC VÀO SQL SERVER THEO MÁY CỦA BẠN; KO CẦN SỬA LẠI KHI NỘP BÀI!!!

    >>>>> RUN THỬ APP ĐỂ XEM TOMCAT CHẠY ĐC KO, NÓ THỬ CONNECT DB LUÔN ĐẤY!!!
          TOANG: LÚC NÀY CHỦ YẾU LÀ CHƯA TẠO DB, SETUP SAI PASS!!!
          OKIE: TÍN HIỆU MÀU ĐỎ NẰM CHÌNH ÌNH KO TẮT 
                                            KẾ BÊN NÚT RUN BÁO RẰNG APP/TOMCAT SẴN SÀNG LẮNG NGHE
            
                         
III. TẠO CẤU TRÚC PROJECT
    * CẤU TRÚC THƯ MỤC (PACKAGE) NGAY GỐC THÌ TẠO ĐỦ, GIỐNG THEO ĐỀ THI YÊU CẦU

    \pojo 
    (là \entity, hoặc \model, hoặc \dto...) => GHÉT ĐỀ Ở CHỖ NÀY, NHƯNG NGHIẾN RĂNG ĐẶT THEO!!!
   
    \repository
    \service
    \controller 
    \config 

    * CẤU TRÚC VIEW (TRANG THYMELEAF HTML VÀ CSS)
    resources\
       static\
          css\               -> phải chuột, new Directory, gõ css 
             style.css       -> phải chuột, new Stylesheet, gõ style
       templates\
             login.html      -> phải chuột, new HTML file
             books.html      -> ứng với tên table chính (table phía N)
             book-form.html  -> ứng với edit/create table chính  
                   
IV. VIẾT CODE...

VI. NỘP BÀI:
- CÁCH 1: UPLOAD THƯ MỤC PROJECT Ở DESKTOP
- CÁCH 2: NÉN THƯ MỤC PROJECT .ZIP .RAR RỒI UPLOAD FILE NÉN LÊN!!!
              
IV. VIẾT VIEW...
1. CSS NẾU CÓ LÀM 
   CÓ THỂ TÁCH RIÊNG FILE .CSS
   HAY ĐỂ TRONG FILE .HTML 
   HAY GÕ TRỰC TIẾP TRONG CÁC TAG <p style="color:red;">????</p>  

   CẦN LƯU Ý PHẦN STYLE: FONT CHỮ, MÀU NỀN, MÀU CHỮ
   FontFamily = Arial
   FontSize of the Text = 18
   FontSize of the Title = 24
   Background Color of page = #02CAA9
   Color of the text = white

   > DÙNG FILE CSS PLAIN ĐỦ VỚI ĐỀ THI (NHƯNG ĐANG CHƠI MÃ MÀU CỜ ĐỎ SAO VÀNG, BẠN SỬA 
                                        LẠI CHO PHÙ HỢP ĐỀ)

2. COPY NGUYÊN FILE .CSS, .HTML VÀO PROJECT

3. CHỈNH ĐẦU TRANG <HTML xmlns:th="http://www.thymeleaf.org">
   CHỈNH LẠI ĐƯỜNG DẪN TRỎ TỚI FILE CSS <link rel="stylesheet" th:href="@{/css/style.css}" />

4. HOÀN THIỆN CODE THYMELEAF MÓC BÊN CONTROLLER

V. VIẾT CODE...
> TA DÙNG CODE FIRST ĐỂ TẠO TABLE, TẠO DATA NGAY LÚC CHẠY TOMCAT
> BẮT VALIDATION Ở ENTITY

1. TẠO 3 ENTITY
   >>>>> NẾU TABLE CHÍNH CÓ KEY TỰ TĂNG, THÌ GÁN SẴN DEFAULT = 0L;
             @Column(name = "Id")
             private Long id = 0L;
         BÊN BOOK-FORM.HTML, CÓ TRUYỀN CÁI FIELD ẨN
             <input type="hidden" th:field="*{id}" />


2. TẠO 3 REPOSITORY -> TẠO THÊM HÀM ĐẶC BIỆT TỰ SINH, NHƯNG PHẢI GÕ TÊN HÀM
3. TẠO 3 SERVICE    -> TẠO HÀM GỌI LẠI REPO
4. TẠO 2 CONFIG
   - TỰ ĐỘNG CHÈN/INSERT DATA XUỐNG DB
   - TỰ ĐỘNG AUDITING NGÀY THÁNG NĂM


>>>>> CHÚC ANH EM XỨ XAVALO VÀ TOÀN BỘ XỨ F MÙA THI PE, MÙA THI TE, MÙA THI FINAL
      GREEN 4EVER - SỐNG XANH - PASSED MÀU XANH
      THI XONG MƠ TOP 100 :) 

      HAPPY CODE | HAPPY MONEY | HAPPY LIFE
   
      LIVE ĐẾN GẦN SÁNG SỚM, ÔN BÀI RỒI ĐI THI LUÔN, LẤY ĐIỂM TỪ 9 UP!!!
   
   
   


















MÌNH ĂN GÌ TỐI SÁNG NAY? AUTHENTICATION (XÁC THỰC) & AUTHORIZATION (PHÂN QUYỀN)

* LOGIN: DÙNG [EMAIL & PASSWORD], HOẶC [ID & PASS] TUỲ ĐỀ BÀI
* ROLE: ADMIN-1, STAFF-2, MEMBER-3 
  ...

1. XÁC THỰC - AUTHEN - MÌNH QUEN BIẾT NHAU HEM? => LOGIN 
* LOGIN QUA EMAIL & PASSWORD, HOẶC ID & PASS

* NẾU CÓ THỂ, BÁO LỖI LOGIN CỤ THỂ:
  - EMAIL SAI (PASS KO CARE)                                      -> ACCOUNT KO TỒN TẠI -> SIGN-UP
  - EMAIL ĐÚNG & PASS SAI                                         -> SAI PASS -> RESET
  - EMAIL ĐÚNG & PASS ĐÚNG & ROLE (MEMBER)                        -> ĐUỔI RA LUÔN
  - EMAIL ĐÚNG & PASS ĐÚNG & ROLE (ADMIN, STAFF) & ACTIVE = FALSE -> INVALID CREDENTIALS
  - EMAIL ĐÚNG & PASS ĐÚNG & ROLE (ADMIN, STAFF) & ACTIVE = TRUE  -> VÀO TRANG /products FULL KO CHE DATA    

2. PHÂN QUYỀN - AUTHOR - MÌNH ĐÃ QUEN NHAU VÀ ... ĐƯỢC LÀM GÌ NHAU? => IF/ELSE
  1 -> ADMIN : FULL KO CHE QUYỀN CRUD
  2 -> STAFF : CHỈ XEM FULL DATA VÀ SEARCH, CẤM CUD 
  3 -> MEMBER: CẤM CỬA, CẤM SỜ HIỆN VẬT 
  
3. GÕ TRỰC TIẾP URL: 
- CẤM CỬA GÕ TRỰC TIẾP, LỘI VÒNG VỀ LOGIN NẾU CHƯA LOGIN
- PHẢI KHỞI ĐI TỪ MÀN HÌNH CHÍNH /products [NÂNG CAO THÁCH THỨC DANH HÀI, BẤM LINK, THAY VÌ GÕ URL] 

=====> CÁC METHOD TRONG AuthController
@GetMapping({"/", "/login", "/ngoctrinh"})  //TRẢ VỀ TRANG LOGIN TRƯỚC CÁI ĐÃ, KO TRẢ VỀ LẤY CHỖ NÀO MÀ GÕ
                                            //EMAIL VÀ PASS?
@GetMapping("/logout")                      //XOÁ SESSION NGAY MÀ KO CHỜ TIMEOUT 30 PHÚT       
 
@PostMapping("/auth")                       //LOGIN, THIẾT LẬP SESSION THÙNG CHỨA 30 PHÚT, LUÂN CHUYỂN INFO
                                            //GIỮA MỌI TRANG CỦA 1 USER ĐANG LOGIN (COOKIE, SESSION ID)
                                            //

=====> CÁC METHOD ĐANG CÓ TRONG ProductController

@GetMapping("/products")               //SHOW FULL SẢN PHẨM, ĐC GỌI TỪ LOGIN ->
@GetMapping("/products/edit/{id}")     //CLICK LINK EDIT 1 SẢN PHẨM      CÙNG MỞ  PRODUCT-FORM.HTML: selectedOne, cates
@GetMapping("/products/new")           //CLICK LINK TẠO MỚI 1 SẢN PHẨM   CÙNG MỞ  PRODUCT-FORM.HTML: selectedOne, cates
@PostMapping("/products/save")         //CLICK [SAVE] BUTTON TRÊN FORM   SAVE BẤT CHẤP EDIT VÀ NEW
@GetMapping("/products/delete/{id}")   //CLICK LINK XOÁ 1 SẢN PHẨM

 
server.servlet.session.timeout=30m # 30 phút











MÌNH ĂN GÌ BỮA NAY? (MÔ PHỎNG LẠI QUÁ TRÌNH LÀM BÀI THI PE - PRACTICAL EXAM)

1. TẠO 1 PROJECT SPRING BOOT MVC (5 OPTIONS CẦN CHỌN)

2. MÓC NỐI VÀO CSDL - XÀI SPRING DATA: SPRING JPA/HIBERNATE

3. CODE FIRST, TẠO TABLE SCHEMA, TẠO DATA SẴN CHO TABLE KHI RUN APP!!!
   CẤM TUYỆT ĐỐI VÀO SQL SERVER MANAGEMENT STUDIO, TẠO TABLE, INSERT DATA 
   TRỰC TIẾP!!! MỌI THỨ PHẢI QUA CODE

4. 3-LAYER: XÂY DỰNG CÁC CLASS XỬ LÍ DATA TỪ TABLE, TỪ OBJECT -> TABLE
 
5. HIỂN THỊ TRANG WEB VỚI DATA LẤY TỪ TABLE 
     
6. ...

>>>>> TOÀN BỘ KIẾN THỨC PHÍA TRÊN ĐÃ HỌC TRÊN LỚP RỒI, BỮA NAY RÁP BÀI!!!



